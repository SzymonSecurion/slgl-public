AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: 'AWS CloudFormation SLGL Continuous Delivery Infrastructure

  '
Parameters:
  PipelineName:
    Description: A name for pipeline
    Type: String
    Default: slgl-beta
  GitHubOwner:
    Type: String
    Default: securionpay
    AllowedPattern: '[A-Za-z0-9-]+'
  GitHubRepo:
    Type: String
    Default: sigia-ledger
    AllowedPattern: '[A-Za-z0-9-]+'
  GitHubBranch:
    Type: String
    Default: master
    AllowedPattern: '[A-Za-z0-9-]+'
  GitHubOAuthToken:
    Type: String
    NoEcho: true
    MinLength: 40
    MaxLength: 40
    AllowedPattern: '[a-z0-9]*'
  SLGLStackName:
    Default: slgl-beta
    Description: A name for the test SLGL stack
    Type: String
Resources:
  ArtifactStoreBucket:
    Type: AWS::S3::Bucket
    Properties:
      VersioningConfiguration:
        Status: Enabled
  AmazonCloudWatchEventRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - events.amazonaws.com
          Action: sts:AssumeRole
      Path: /
      Policies:
      - PolicyName: cwe-pipeline-execution
        PolicyDocument:
          Version: 2012-10-17
          Statement:
          - Effect: Allow
            Action: codepipeline:StartPipelineExecution
            Resource:
              Fn::Sub: arn:aws:codepipeline:${AWS::Region}:${AWS::AccountId}:${Pipeline}
  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      ArtifactStore:
        Location:
          Ref: ArtifactStoreBucket
        Type: S3
      DisableInboundStageTransitions: []
      Name:
        Ref: PipelineName
      RoleArn:
        Fn::GetAtt:
        - PipelineRole
        - Arn
      Stages:
      - Name: Source
        Actions:
        - Name: Source
          InputArtifacts: []
          ActionTypeId:
            Category: Source
            Owner: ThirdParty
            Version: '1'
            Provider: GitHub
          OutputArtifacts:
          - Name:
              Fn::Sub: ${SLGLStackName}-SourceArtifact
          Configuration:
            Owner:
              Ref: GitHubOwner
            Repo:
              Ref: GitHubRepo
            Branch:
              Ref: GitHubBranch
            PollForSourceChanges: false
            OAuthToken:
              Ref: GitHubOAuthToken
          RunOrder: 1
      - Name: Build
        Actions:
        - ActionTypeId:
            Category: Build
            Owner: AWS
            Provider: CodeBuild
            Version: '1'
          Configuration:
            ProjectName:
              Fn::Sub: ${SLGLStackName}-CodeBuild
          InputArtifacts:
          - Name:
              Fn::Sub: ${SLGLStackName}-SourceArtifact
          Name: PackageExport
          OutputArtifacts:
          - Name:
              Fn::Sub: ${SLGLStackName}-BuildArtifact
          RunOrder: 1
      - Name: Deploy
        Actions:
        - Name: Deploy
          ActionTypeId:
            Category: Deploy
            Owner: AWS
            Provider: CloudFormation
            Version: '1'
          InputArtifacts:
          - Name:
              Fn::Sub: ${SLGLStackName}-BuildArtifact
          Configuration:
            ActionMode: REPLACE_ON_FAILURE
            RoleArn:
              Fn::GetAtt:
              - CFNRole
              - Arn
            StackName:
              Ref: SLGLStackName
            Capabilities: CAPABILITY_AUTO_EXPAND,CAPABILITY_IAM
            TemplateConfiguration:
              Fn::Sub: ${SLGLStackName}-BuildArtifact::template-configuration.json
            TemplatePath:
              Fn::Sub: ${SLGLStackName}-BuildArtifact::template-export.yml
          RunOrder: 1
  GithubWebhook:
    Type: AWS::CodePipeline::Webhook
    Properties:
      Authentication: GITHUB_HMAC
      AuthenticationConfiguration:
        SecretToken:
          Ref: GitHubOAuthToken
      RegisterWithThirdParty: true
      Filters:
      - JsonPath: $.ref
        MatchEquals: refs/heads/{Branch}
      TargetPipeline:
        Ref: Pipeline
      TargetAction: Source
      TargetPipelineVersion:
        Fn::GetAtt:
        - Pipeline
        - Version
  PermissionsBoundaryPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      Description: IAM policy to define the permissions boundary for IAM entities
        created in an SLGL project
      ManagedPolicyName:
        Fn::Sub: SLGL_${SLGLStackName}_PermissionsBoundary
      PolicyDocument:
        Statement:
        - Action:
          - '*'
          Effect: Allow
          Resource:
          - Fn::Sub: arn:${AWS::Partition}:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/${SLGLStackName}/*
          - Fn::Sub: arn:${AWS::Partition}:codebuild:${AWS::Region}:${AWS::AccountId}:project/${SLGLStackName}-CodeBuild
          - Fn::Sub: arn:${AWS::Partition}:codepipeline:${AWS::Region}:${AWS::AccountId}:${PipelineName}
          - Fn::Sub: arn:${AWS::Partition}:codepipeline:${AWS::Region}:${AWS::AccountId}:${PipelineName}Deploy
          - Fn::Sub: arn:${AWS::Partition}:s3:::${ArtifactStoreBucket}
          - Fn::Sub: arn:${AWS::Partition}:s3:::${ArtifactStoreBucket}/*
          Sid: 1
        - Action:
          - kms:Encrypt
          - kms:Decrypt
          - kms:GenerateDataKey
          Effect: Allow
          Resource:
          - Fn::Sub: arn:${AWS::Partition}:kms:${AWS::Region}:${AWS::AccountId}:alias/aws/s3
          Sid: 2
        - Action:
          - iam:PassRole
          Effect: Allow
          Resource:
          - Fn::GetAtt:
            - CFNRole
            - Arn
          Sid: 3
        - Action:
          - cloudtrail:CreateTrail
          - cloudtrail:StartLogging
          - logs:CreateLogGroup
          - logs:CreateLogStream
          - logs:DescribeLogGroups
          - logs:PutLogEvents
          - sns:Get*
          - sns:List*
          - sns:Publish
          - sns:Subscribe
          - xray:Put*
          Effect: Allow
          Resource: '*'
          Sid: 4
        Version: 2012-10-17
  ToolChainRole:
    Properties:
      Description: Creating toolchain role in IAM for Amazon EC2 instances
      AssumeRolePolicyDocument:
        Statement:
        - Action: sts:AssumeRole
          Effect: Allow
          Principal:
            Service:
            - codebuild.amazonaws.com
            - codedeploy.amazonaws.com
            - codepipeline.amazonaws.com
            - events.amazonaws.com
            - lambda.amazonaws.com
      ManagedPolicyArns:
      - Fn::Sub: arn:${AWS::Partition}:iam::aws:policy/AWSCodeBuildAdminAccess
      - Fn::Sub: arn:${AWS::Partition}:iam::aws:policy/AWSCodeDeployFullAccess
      - Fn::Sub: arn:${AWS::Partition}:iam::aws:policy/AWSCodePipelineFullAccess
      - Fn::Sub: arn:${AWS::Partition}:iam::aws:policy/AWSLambdaFullAccess
      - Fn::Sub: arn:${AWS::Partition}:iam::aws:policy/CloudWatchEventsFullAccess
      Path: /
      PermissionsBoundary:
        Ref: PermissionsBoundaryPolicy
      Policies:
      - PolicyDocument:
          Statement:
          - Action:
            - kms:GenerateDataKey*
            - kms:Encrypt
            - kms:Decrypt
            Effect: Allow
            Resource: '*'
          - Action:
            - s3:PutObject
            Effect: Allow
            Resource:
            - Fn::Sub: arn:${AWS::Partition}:s3:::${ArtifactStoreBucket}
            - Fn::Sub: arn:${AWS::Partition}:s3:::${ArtifactStoreBucket}/*
        PolicyName: ToolChainWorkerPolicy
      RoleName:
        Fn::Sub: SLGL-${SLGLStackName}-ToolChain-Role
    Type: AWS::IAM::Role
  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Packaging: ZIP
        Type: CODEPIPELINE
      Description: CodeBuild Project for SLGL
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        EnvironmentVariables:
        - Name: S3_BUCKET
          Value:
            Ref: ArtifactStoreBucket
        - Name: PROJECT_ID
          Value:
            Fn::Sub: ${SLGLStackName}
        - Name: ACCOUNT_ID
          Value:
            Ref: AWS::AccountId
        - Name: PARTITION
          Value:
            Ref: AWS::Partition
        - Name: ENVIRONMENT
          Value: beta
        Image: aws/codebuild/standard:2.0
        Type: LINUX_CONTAINER
      Name:
        Fn::Sub: ${SLGLStackName}-CodeBuild
      ServiceRole:
        Ref: ToolChainRole
      Source:
        Type: CODEPIPELINE
  CFNRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action:
          - sts:AssumeRole
          Effect: Allow
          Principal:
            Service:
            - cloudformation.amazonaws.com
        Version: '2012-10-17'
      Path: /
      Policies:
      - PolicyName: CloudFormationRole
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Action:
            - sns:*
            - qldb:*
            - dynamodb:*
            - lambda:*
            - events:*
            - logs:*
            - apigateway:*
            - iam:CreateRole
            - iam:DeleteRole
            - iam:PutRolePolicy
            - iam:DeleteRolePolicy
            - iam:AttachRolePolicy
            - iam:DetachRolePolicy
            - iam:GetRole
            - iam:GetRolePolicy
            - s3:GetObject
            - s3:CreateBucket
            - s3:DeleteBucket
            - s3:PutBucketAcl
            - s3:PutBucketPolicy
            - s3:DeleteBucketPolicy
            - codedeploy:CreateApplication
            - codedeploy:DeleteApplication
            - codedeploy:CreateDeployment
            - codedeploy:GetDeploymentConfig
            - codedeploy:RegisterApplicationRevision
            - codedeploy:GetDeployment
            - codedeploy:CreateDeploymentGroup
            - codedeploy:DeleteDeploymentGroup
            Effect: Allow
            Resource: '*'
          - Action:
            - cloudformation:CreateChangeSet
            Effect: Allow
            Resource:
              Fn::Sub: arn:aws:cloudformation:${AWS::Region}:aws:transform/Serverless-2016-10-31
          - Action:
            - iam:PassRole
            Effect: Allow
            Resource:
              Fn::Sub: arn:aws:iam::${AWS::AccountId}:role/*
  PipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action:
          - sts:AssumeRole
          Effect: Allow
          Principal:
            Service:
            - codepipeline.amazonaws.com
        Version: '2012-10-17'
      Path: /
      Policies:
      - PolicyName: CodePipelineAccess
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Action:
            - s3:*
            - cloudformation:CreateStack
            - cloudformation:DescribeStacks
            - cloudformation:DeleteStack
            - cloudformation:UpdateStack
            - cloudformation:CreateChangeSet
            - cloudformation:ExecuteChangeSet
            - cloudformation:DeleteChangeSet
            - cloudformation:DescribeChangeSet
            - cloudformation:SetStackPolicy
            - iam:PassRole
            - sns:Publish
            Effect: Allow
            Resource: '*'
          - Action:
            - codebuild:StartBuild
            - codebuild:BatchGetBuilds
            Effect: Allow
            Resource:
              Fn::GetAtt:
              - CodeBuildProject
              - Arn
  AuditorRole:
    Type: AWS::IAM::Role
    Properties:
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/SecurityAudit
      AssumeRolePolicyDocument:
        Statement:
        - Action:
          - sts:AssumeRole
          Effect: Allow
          Principal:
            AWS:
            - 174706592265
        Version: '2012-10-17'
      Path: /
      Policies:
      - PolicyName: AuditorRoleAccess
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Action:
            - cloudformation:ListStackResources
            - lambda:GetFunction
            - lambda:GetFunctionEventInvokeConfig
            - cloudwatch:GetMetricData
            - cloudwatch:GetMetricStatistics
            - logs:FilterLogEvents
            - codepipeline:GetPipeline
            - codepipeline:ListPipelineExecutions
            - codepipeline:ListActionExecutions
            - qldb:ListLedgers
            - lambda:GetAlias
            - codepipeline:GetPipelineExecution
            - codebuild:BatchGetProjects
            - codebuild:BatchGetBuilds
            - cloudformation:DetectStackDrift
            Effect: Allow
            Resource: '*'
      - PolicyName: ProwlerAdditionalPermissions
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Action:
            - access-analyzer:List*
            - apigateway:get*
            - apigatewayv2:get*
            - aws-marketplace:viewsubscriptions
            - batch:listjobs
            - clouddirectory:listappliedschemaarns
            - clouddirectory:listdevelopmentschemaarns
            - clouddirectory:listpublishedschemaarns
            - cloudformation:list*
            - cloudhsm:listavailablezones
            - cloudsearch:list*
            - cloudwatch:get*
            - cloudwatch:list*
            - codebuild:listbuilds*
            - codestar:verify*
            - cognito-identity:listidentities
            - cognito-idp:list*
            - cognito-sync:listdatasets
            - connect:list*
            - datapipeline:getaccountlimits
            - dax:describeclusters
            - dax:describedefaultparameters
            - dax:describeevents
            - dax:describeparametergroups
            - dax:describeparameters
            - dax:describesubnetgroups
            - dax:describetable
            - dax:listtables
            - devicefarm:list*
            - discovery:list*
            - dms:list*
            - ds:ListAuthorizedApplications
            - ds:DescribeRoles
            - dynamodb:describebackup
            - dynamodb:describeglobaltablesettings
            - dynamodb:describelimits
            - dynamodb:describereservedcapacity
            - dynamodb:describereservedcapacityofferings
            - dynamodb:describestream
            - dynamodb:listtagsofresource
            - ec2:get*
            - ecr:describe*
            - ecr:listimages
            - elasticbeanstalk:listavailablesolutionstacks
            - elasticmapreduce:list*
            - elastictranscoder:list*
            - gamelift:list*
            - glacier:list*
            - importexport:listjobs
            - lex:getbotaliases
            - lex:getbotchannelassociations
            - lex:getbots
            - lex:getbotversions
            - lex:getintents
            - lex:getintentversions
            - lex:getslottypes
            - lex:getslottypeversions
            - lex:getutterancesview
            - lightsail:getblueprints
            - lightsail:getbundles
            - lightsail:getinstancesnapshots
            - lightsail:getkeypair
            - lightsail:getregions
            - lightsail:getstaticips
            - lightsail:isvpcpeered
            - machinelearning:describe*
            - mobilehub:listavailablefeatures
            - mobilehub:listavailableregions
            - mobilehub:listprojects
            - mobiletargeting:getapplicationsettings
            - mobiletargeting:getcampaigns
            - mobiletargeting:getimportjobs
            - mobiletargeting:getsegments
            - opsworks-cm:describe*
            - opsworks:describe*
            - polly:describe*
            - polly:list*
            - redshift:viewqueriesinconsole
            - route53domains:list*
            - s3:listbucket
            - sdb:list*
            - secretsmanager:listsecretversionids
            - servicecatalog:list*
            - ses:list*
            - ses:sendemail
            - sns:list*
            - sqs:listqueuetags
            - ssm:listassociations
            - states:listactivities
            - support:describe*
            - swf:list*
            - tag:gettagkeys
            - trustedadvisor:describe*
            - waf-regional:list*
            - waf:list*
            - workdocs:describeavailabledirectories
            - workdocs:describeinstances
            - workmail:describe*
            Effect: Allow
            Resource: '*'
  DeployFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: s3://sigia-ledger-ci-artifactstorebucket-qrx7ex10tb4t/7f870d6fa4074395749b5fc3e056e159
      Handler: index.handler
      MemorySize: 256
      Runtime: python3.7
      Timeout: 60
      ReservedConcurrentExecutions: 1
